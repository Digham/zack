The bios initialises the stack pointer to 0xe000, prints a welcome message, and detects and runs programs in the memory. If the value at address 0x0200 is nonzero, the BIOS passes execution to code pointed to by 0x0200 (ie. jumps to the address contained in 0x0200), otherwise the BIOS halts. As such each program should specify the entry point by a pointer located at address 0x0200. Note that the assembler does this automatically with the '-prog' flag, or if the first line of a source file is `Z1.0 prog`.

The BIOS also defines a few useful IO functions (addresses below in decimal) - see bios.src for assembly source and more details:

printc  - 107 (char(A))
prints  - 110 (*str(A), len(C))
getc    - 119 () -> char(A)
halt    - 128 ()
clrtty  - 131 ()
clrscr  - 134 ()
showcol - 137 (colnum(C), value(D))
showimg - 145 (*cols(A))

(you can include define.src to use the names of the functions, as demonstrated in the example programs)

Note: prints modifies registers A, B, D
      showimg modifies registers A and D
      getc modifies A, B
      showcol modifies B, C
      The other functions don't modify any registers.
      The registers E, F, G are caller saved.

Also note: DONT call prints with register C (this is the length) set to ZERO!!!
